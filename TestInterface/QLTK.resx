<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AUPFQ475OfJIwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAvdSURBVHhe
        7VtrbFTHFZ69632/10BNAgQqhTyqQFIlP9sm0EKiEiOwjU1IfwCtmgrRACklKFUDLT+iqhJEUQkBUsor
        CfT9o00ayA9EUh4NQTz8oBhsMG/wLuAkmNi+p+c7997l2qzXd00Nu2lH+jyzM2fmzvnOmTMzd72qSFIJ
        QzOKjhJk0edLkbRwOCyFeDwejsViSUaiFyQhA9lwOIIsH9IKL5WUlGixWFxpmjaFyzu56gIj3QcuQBZ9
        mAwZg+uKL7lcLo2B4iucE+ddfr+fWCmKRqNZgTbIQNbsg74yFgYqpuTGH7ZiBWfk9Xo7lixZ2rFv3359
        //4D+uHDdXpdXUM3oA5tkGHZTvRBX3MMJBmzWJJYjN13O2e0dOkvOq9f76DTp8/SlStt1Nh4XK+trc8o
        jzLq0AYZyKIP+ppjIBWNF4jfm8HsDFwaVoVirCTNnDmLksmk3tP9UYc2yEAWfczlcNoKjJxk7EJPFgEJ
        zlqxruHaly9fpVmzZkMhcrvd19HGSJloNetEBrLog75oM8dCKh4CsK1xloJ1sb7h4mVlZVBIDwaDE4cP
        H+HntlIAZdShraxsqCwR9EFfjGGOhVScBFhrneuyKdRNHjKW/JeOAEshzkshwwmBTYKbWZdVvtgIsBRK
        ciYKIcoDlkJmG5KdAKfyBZtgHezVN3nAkSNHdcBSqIdF85XPPKOwEp9YVILnGQqH1KDBUV8sPopr0xFW
        YtfuvTqAMuqkbdDgCGudFHA5p3woNEoFQ1Hl9YaUP8DqF9bJ0LKGjye2nHGey9jicK7XcaSNhkIC83ir
        m23WFmihL/lWc+zlDB8DqSA8wTqirmCQ8ng6VTxBKsZ7OPZx5OGwAXsddoSoCflsa7PkMU4kQsrnI7Y8
        KbdbTofms5Du+PHYsEAkyn6pTrKFSG35S6c6cV5XdU26qm8mwNVwQqAa+HPdcVK1x3TVcEJXjacNoIw6
        tLGMIc+yR1tI7T1Iat4Lupq/UFfTplsEtDApeOYdTwYBcSx+dYljAIny6XZSF9pIXfy0O85dIXX1C1Kd
        RKr1c3IdOy1AWequXDdkLHnUn2ol9fIvSS16idSCn+riCVgO/oAVGO9oMgiIGcdecd96tjyUP50idSZ9
        Ay2XSH2qk/rXIXL/aA5p9z/A7s3uz9AefJDcc+aS2lfLMl2GLPqDjONnSf1sCamFi0nNnc8EyP0gzXnB
        EZASAuDOsB6UPnvZAKz4GSv/6uukBcWCDBdFfC4KM1BGncaBT61cY8iiz/mrpJrO3SDgxwuKkABRnt37
        1ZXEe5coWzFpJH34h/F0/uPJgh1bx1H5kyMMEiCzcq1BAsYoagLgxqlr4vZalKM5K/erxQ8TpZ+lrvPT
        iU5WC6ScmkHLfjLGICHB43xSRxJLjp8pYgKwlq8RuefOE8Wqykey8jOo42gldTL0Y1UCfO5orBQSJj91
        j8i6FywkdZ09p/FUkS8BXsfaQw+JUh+w2xNbG8rT8apukLoL0+m9d54QWe2RR4xdoMkWBIuKALg/564j
        vP/HEhTxKzrL6x0uD6v3JEDqWqqpZU85BT0cB5KDyAX3b7lI6qX+EYDJDTSMMznO8zkJSN5WAjCx23VE
        xLP6XgJjxopbb/9970sAcUCWwNvWEvh6/5aAS3Nr3nBSeQLRoDeUSDISAwVPMJ70x74ScUcScpO7iQAr
        CD6/QJTC9mcPgpbyKGeCoLkdul/IPwga1uh+K5MXjmY+cHC55CYnlxmc4S0CsAxaeRvkE55mvA6jVxaN
        FRK6ztQQwe0ZUua6G9sgH6n31+e9DXa7lWkl3k5vKElsqQGHh4FnigfgAmRfAtZB6DerMwehp799N+3/
        23eImqYJUP7uuLukTWRefzPvg5BY3xOIGbcyHujxF7d1Vq1r16esatWnrk4PCKa8kdIr1rbpk1Y06x4v
        X18jDNz67ARkSGCF+IRXEmUZVnLY3SFqb6oSDLuLj8BcV4LD0ipT+TyPwkKAN2zcyjinqnVp/ZktRDVv
        6TT9bRoQYOxnthJVvJkmr48n3xsBFgkcD1x7DpA7mRSFd2wdL0AZda69B0RGZNEnbwI4MHHWCreE5Wve
        Ipq2sYuqN+qOANlpGxjIc8GS4RzPYE/omwDgxAUjsP1wjijt87oFKKvnuA5tkIEs+veTgBQIgIvCSqLc
        Js5zAcpv6BRlxLI2K/eE1QbZqvUdBgGrTQ8IsyvXNRnvAhAAoYQdVh0s/P3nyJUsFaAsdXYZ5Hlch/tP
        wEZWZnMXPftHosrffi7W5L45ARnIos/0d+ABTIA/SgpruPm8Eb2zvRABUN/6mVjbdfKiQCyPup598ngh
        0j8CuK1mM/J2Gv3kPPJFB1OJP0wef4Tz7DDawiI7euLzVL25g6p+107B5DBxZdeWvxokwBPkNVgWYKeo
        PU7qKO/xwOFjeJFC6gifIXCOEDTrfAbQ+SapO3kl1i8C4Paw4uinjNuaVuITJd3eAJX4Qt0Ut8MTiIgs
        +oyeOJdmvkt0L+f47PJ6jVjgBFgyEQa2z8zLUhtQ5/ClaP4EwPq8fuHKweRwmfzji7dT5bprTEwHR/Y2
        DqSXMm5vgYMr7zDtLLtN+gTY8vCAGvYEeJE/OkTigRO4PUykh4kw3gj19rocMA5zOV6L94sAtEMpy6qV
        61L0vT8TPTprNZW/1ijl6k2G3I3gx1sfb6+8zUofPnJLDEAskDiyzogjCIy9Ac8sX5Wie5e10T2LmnUt
        KAeptCvMR+rMFyZ8v8DX4tFoQgKe359UXl+QPYG1vfmLEWcEoGwC2xg8AJPB+vXHy2RJPDr7DbFsfMTD
        rMg5Q1mO9iDC3g+egFgA8jCGfVewE9YTVn0Vj/fAcqJRS9O6OyAEpLSAzB8pY9ksCW5/U7sjAuyTsluU
        T3M0dc1VUbb8tVOU/OpjJglj2WJMAh92sOdn8xyLgMyz+sA05Kx8xfouuv/XTMDPUzYC4vYvQaFTNmRN
        0pCTAM6nrr6ccUE7QICx5ltl/U9a0USRoffdIIE9AS4uk2fkJMAkOxdqGBUbdIOAl/P2gKypVwLEZTmH
        4sHS4Rx4ArJurckLfOzKAJfd3qBccODevNSEBHiEpRzG+z8BxURAZlKc/08uAfukbksQNJ+VC3eMACmb
        sLYzTN6+DT42e7WpvLNtEGcBjAFCuz0rB+4cAXZwvd2S3Q5Cs9ewJxx1fBDCGDmf1QMFQwAsiZMbgiP3
        k+Ot46Pwi8ZRGMdo9MFYxUUAw7oM3XcLlyH0xRgYK9szsqFgCBAvyFyH5/MVdwgr6PQ6PET6oK8xhjPr
        A4VDAGC9EPlTP16IcB/0xRhZx+4FhUUAwDJw4b4uMsCNYGi6fR6WtzBgBOCbGs6EALbSf+elqPk5m3x/
        kMdlKK90kwdUrE3rOMBg2+ppRaewrI0J20mQco/t0Sks+T6uw3kTIEnz+OU7OhDw9IpmvZK3sqkO1nQu
        YNur3nSdpvPeD4+SZcJl1KEtW5++UMGYvCpFo5e10chFzRYBaY8/jPlHXC6XB/o4TRZb6xlfMDrYIUjj
        y43m4+3qFuAOxHk7DNLQMRNvUmLomAnSBplsfZ1AeYBur8QuMfDDCeiC5MgTrICxm0GhUKgzFotROBSk
        yC0iHArwjdD4Ps/lDTH4hijAV1lcx22QydbXEcIGwuEwRSJRCgSC1kvPXVCIk6NgKL+w9Hq98qXovHnz
        O06dOkMHDx6m2rqG/qG2XvI6xhPjxvMEI1SaTFAiHhOgjLpx3AYZex/HYPn6+iO0d+8+evfv22jvnk9o
        9uwfwIPJ4/HgxSeSo1+PipDf75/BGU2YMKHjxIkW/dChWvnRQX+B/9dvaPi3zkTqO3bs1Hd++E99504T
        XEYd2iAD2Wxj5AL6MAH6Rx/t1v/x3gf67l0f69/8xrfkp3I+nw+6IDkiQNYJB46vcaa73W78Ckv+1/5W
        EYlECMuptLQ0K9AGmWx9nQKeZCyBiMwdOpi6IDmPAZqmIX+f0c6w/l29mIA5Y+7vm7ogOYoB9uRlFvED
        5Gw/TC5IsBck2PqSY+7QwVAl/wS28masAFMeeij1H+X59VSyxO/BAAAAAElFTkSuQmCC
</value>
  </data>
</root>